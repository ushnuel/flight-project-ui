{"version":3,"sources":["Components/header.jsx","Components/handleResponse.js","Components/footer.jsx","Components/form.jsx","Components/flightSearch.jsx","App.js","serviceWorker.js","index.js"],"names":["header","title","className","handleResponse","errorResponse","error","footer","form","destination_city","departure_city","departure_date","return_date","cabin","no_of_adult","no_of_child","no_of_infant","Onchange","onSubmit","submitText","id","htmlFor","type","name","required","value","onChange","flightSearch","fetchOption","data","headers","CONTENT_TYPE","method","body","JSON","stringify","onChangeHandler","e","setState","target","checkResponse","response","ok","json","timeOutHandler","input","document","getElementById","style","display","setTimeout","removeParameter","success","onSubmitHandler","event","preventDefault","state","fetch","URL","then","catch","_isMounted","this","HandleResponse","Component","App","path","exact","component","FlightSearch","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc5f4e09.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst header = ({ title }) => {\r\n  return (\r\n    <div className='bk-header'>\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default header;\r\n","import React from 'react';\r\n\r\nconst handleResponse = (errorResponse) => {\r\n  let response = null;\r\n  if (errorResponse) {\r\n    response = <div className='tm-error-class'>{errorResponse.error}</div>;\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default handleResponse;\r\n","import React from 'react';\r\n\r\nconst footer = () => (\r\n  <div className='bk-footer'>\r\n    <p>&copy; 2019 Flight Search. All rights reserved</p>\r\n  </div>\r\n);\r\n\r\nexport default footer;\r\n","import React from 'react';\r\n\r\nconst form = ({\r\n  destination_city,\r\n  departure_city,\r\n  departure_date,\r\n  return_date,\r\n  cabin,\r\n  no_of_adult,\r\n  no_of_child,\r\n  no_of_infant,\r\n  Onchange,\r\n  onSubmit,\r\n  submitText,\r\n}) => {\r\n  return (\r\n    <form id='searchForm' onSubmit={onSubmit}>\r\n      <div className='bk-form-inputs'>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='departure_city'>\r\n            Departure City <span>*</span>\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='departure_city'\r\n            id='departure_city'\r\n            required\r\n            value={departure_city}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='destination_city'>\r\n            Destination City <span>*</span>\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='destination_city'\r\n            id='destination_city'\r\n            required\r\n            value={destination_city}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='bk-form-inputs'>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='departure_date'>\r\n            Departure Date <span>*</span>\r\n          </label>\r\n          <input\r\n            type='date'\r\n            name='departure_date'\r\n            id='departure_date'\r\n            required\r\n            value={departure_date}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='return_date'>\r\n            Return Date <span>*</span>\r\n          </label>\r\n          <input\r\n            type='date'\r\n            name='return_date'\r\n            id='return_date'\r\n            required\r\n            value={return_date}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='bk-form-inputs'>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='no_of_child'>\r\n            Number of Children <span>*</span>\r\n          </label>\r\n          <input\r\n            type='number'\r\n            name='no_of_child'\r\n            id='no_of_child'\r\n            required\r\n            value={no_of_child}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='no_of_adult'>\r\n            Number of Adults <span>*</span>\r\n          </label>\r\n          <input\r\n            type='number'\r\n            name='no_of_adult'\r\n            id='no_of_adult'\r\n            required\r\n            value={no_of_adult}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='bk-form-inputs'>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='cabin'>\r\n            Cabin Class <span>*</span>\r\n          </label>\r\n          <select name='cabin' id='cabin' required value={cabin} onChange={Onchange}>\r\n            <option value='Select class'>Select class</option>\r\n            <option value='All'>All</option>\r\n            <option value='Economy'>Economy</option>\r\n            <option value='First'>First</option>\r\n            <option value='Premium'>Premium</option>\r\n            <option value='Business'>Business</option>\r\n          </select>\r\n        </div>\r\n        <div className='bk-label-input'>\r\n          <label htmlFor='no_of_infant'>\r\n            Number of Infants <span>*</span>\r\n          </label>\r\n          <input\r\n            type='number'\r\n            name='no_of_infant'\r\n            id='no_of_infant'\r\n            required\r\n            value={no_of_infant}\r\n            onChange={Onchange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button type='submit'>{submitText}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport Header from './header';\r\nimport HandleResponse from './handleResponse';\r\nimport Footer from './footer';\r\nimport Form from './form';\r\nimport './index.css';\r\n\r\nclass flightSearch extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      response: '',\r\n      success: false,\r\n      return_date: '',\r\n      departure_city: '',\r\n      destination_city: '',\r\n      no_of_adult: '',\r\n      no_of_child: '',\r\n      no_of_infant: '',\r\n      departure_date: '',\r\n      cabin: '',\r\n      errorResponse: '',\r\n    };\r\n    this.URL = 'https://flight-project-app.herokuapp.com/v1/flight/search-flight';\r\n    this.CONTENT_TYPE = 'application/json';\r\n    this._isMounted = false;\r\n  }\r\n  fetchOption = (data) => {\r\n    return {\r\n      headers: { 'content-type': this.CONTENT_TYPE, 'Access-Control-Allow-Origin': '*' },\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    };\r\n  };\r\n  onChangeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  checkResponse = (response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw response;\r\n  };\r\n  timeOutHandler = () => {\r\n    const input = document.getElementById('bk-flight-response');\r\n    if (input) {\r\n      input.style.display = 'none';\r\n    }\r\n    setTimeout(this.timeOutHandler, 20000);\r\n  };\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.timeOutHandler();\r\n  }\r\n  removeParameter = ({ success, response, errorResponse, ...others }) => {\r\n    return others;\r\n  };\r\n  onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const body = this.removeParameter(this.state);\r\n    fetch(this.URL, this.fetchOption(body))\r\n      .then((response) => this.checkResponse(response))\r\n      .then((data) => {\r\n        this.setState({ response: data, success: false });\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        error.json().then((body) => {\r\n          this.setState({ errorResponse: { ...body }, success: false });\r\n        });\r\n      });\r\n    this.setState({ success: true });\r\n  };\r\n  render() {\r\n    const { errorResponse } = this.state;\r\n    const response = HandleResponse(errorResponse);\r\n    const submitText = !this.state.success ? 'Search Now' : 'Please wait ...';\r\n    return (\r\n      <>\r\n        <Header title='Flight Search' />\r\n        {response ? <div id='bk-flight-response'>{response}</div> : null}\r\n        <Form\r\n          onSubmit={this.onSubmitHandler}\r\n          Onchange={this.onChangeHandler}\r\n          submitText={submitText}\r\n          no_of_adult={this.state.no_of_adult}\r\n          destination_city={this.state.destination_city}\r\n          departure_city={this.state.departure_city}\r\n          return_date={this.state.return_date}\r\n          no_of_child={this.state.no_of_child}\r\n          no_of_infant={this.state.no_of_infant}\r\n          departure_date={this.state.departure_date}\r\n          cabin={this.state.cabin}\r\n        />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default flightSearch;\r\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport FlightSearch from './Components/flightSearch';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path='/' exact component={FlightSearch} />\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}